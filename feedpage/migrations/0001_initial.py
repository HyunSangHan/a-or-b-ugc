# Generated by Django 2.1.7 on 2019-07-22 15:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentUpvote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=30)),
                ('content_a', models.CharField(max_length=21)),
                ('content_b', models.CharField(max_length=21)),
                ('img_a', imagekit.models.fields.ProcessedImageField(null=True, upload_to='feed_img')),
                ('img_b', imagekit.models.fields.ProcessedImageField(null=True, upload_to='feed_img')),
                ('feed_type', models.IntegerField(default=1)),
                ('is_img_view', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=70)),
                ('upvote_side', models.IntegerField(default=0)),
                ('total_upvote', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Feed')),
                ('reactor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('upvote_users', models.ManyToManyField(blank=True, related_name='upvote_feedcomments', through='feedpage.CommentUpvote', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HashTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('noti_type', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_checked', models.BooleanField(default=False)),
                ('is_mine', models.BooleanField(default=False)),
                ('feed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='feedpage.Feed')),
                ('follow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Follow')),
                ('noti_from', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='noti_from', to='accounts.Profile')),
                ('noti_to', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='noti_to', to='accounts.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Feed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Feed')),
                ('hash_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.HashTag')),
            ],
        ),
        migrations.CreateModel(
            name='Upvote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_a', models.BooleanField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Feed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='feed',
            name='matched_tags',
            field=models.ManyToManyField(blank=True, related_name='tagged_feeds', through='feedpage.TagRelation', to='feedpage.HashTag'),
        ),
        migrations.AddField(
            model_name='feed',
            name='upvote_users',
            field=models.ManyToManyField(blank=True, related_name='upvote_feeds', through='feedpage.Upvote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentupvote',
            name='feedcomment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.FeedComment'),
        ),
        migrations.AddField(
            model_name='commentupvote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
